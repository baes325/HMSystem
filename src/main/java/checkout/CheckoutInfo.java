/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package checkout;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;

/**
 *
 * @author Suvier
 */
public class CheckoutInfo extends javax.swing.JFrame {

    /**
     * Creates new form CheckoutInfo
     */
    public CheckoutInfo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CheckoutInfo = new javax.swing.JLabel();
        CheckoutTime = new javax.swing.JLabel();
        CheckoutHourInput = new javax.swing.JTextField();
        ClientFeedback = new javax.swing.JLabel();
        OKButton = new javax.swing.JButton();
        JScrollPane1 = new javax.swing.JScrollPane();
        FeedbackInput = new javax.swing.JTextArea();
        Hour = new javax.swing.JLabel();
        CheckoutMinuteInput = new javax.swing.JTextField();
        Minute = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CheckoutInfo.setText("체크아웃 정보");

        CheckoutTime.setText("체크아웃 시간 :");

        CheckoutHourInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckoutHourInputActionPerformed(evt);
            }
        });

        ClientFeedback.setText("고객 피드백 :");

        OKButton.setText("확인");

        FeedbackInput.setColumns(20);
        FeedbackInput.setRows(5);
        JScrollPane1.setViewportView(FeedbackInput);

        Hour.setText("시");

        Minute.setText("분");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ClientFeedback)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CheckoutTime)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CheckoutHourInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Hour)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CheckoutMinuteInput, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Minute)))
                .addContainerGap(53, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(CheckoutInfo)
                        .addGap(161, 161, 161))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(OKButton)
                        .addGap(153, 153, 153))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(CheckoutInfo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CheckoutTime)
                    .addComponent(CheckoutHourInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Hour)
                    .addComponent(CheckoutMinuteInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Minute))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ClientFeedback)
                    .addComponent(JScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(OKButton)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        OKButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    int hour = Integer.parseInt(CheckoutHourInput.getText().trim());
                    int minute = Integer.parseInt(CheckoutMinuteInput.getText().trim());

                    if (hour < 0 || hour > 23 || minute < 0 || minute > 59) {
                        javax.swing.JOptionPane.showMessageDialog(null, "올바른 시간을 입력하세요 (0-23시, 0-59분).");
                        return;
                    }

                    if (hour > 11 || (hour == 11 && minute > 0)) {
                        TimeOver timeOver = new TimeOver();
                        timeOver.setVisible(true);
                    }
                    else {
                        NotTimeOver notTimeOver = new NotTimeOver();
                        notTimeOver.setVisible(true);
                    }
                }
                catch (NumberFormatException ex) {
                    javax.swing.JOptionPane.showMessageDialog(null, "숫자를 입력하세요.");
                }
                String feedbackText = FeedbackInput.getText().trim();
                if (feedbackText.isEmpty()) {
                    return;
                }

                try (BufferedWriter writer = new BufferedWriter(new FileWriter("고객 피드백.txt", true))) {
                    writer.write(feedbackText);
                    writer.newLine();
                    javax.swing.JOptionPane.showMessageDialog(null, "피드백이 저장되었습니다.");
                } catch (IOException ioException) {
                    javax.swing.JOptionPane.showMessageDialog(null, "파일 저장 중 오류가 발생했습니다: " + ioException.getMessage());
                }

                FeedbackInput.setText("");
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CheckoutHourInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckoutHourInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CheckoutHourInputActionPerformed

    /**
     * @param args the command line arguments
     */
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CheckoutHourInput;
    private javax.swing.JLabel CheckoutInfo;
    private javax.swing.JTextField CheckoutMinuteInput;
    private javax.swing.JLabel CheckoutTime;
    private javax.swing.JLabel ClientFeedback;
    private javax.swing.JTextArea FeedbackInput;
    private javax.swing.JLabel Hour;
    private javax.swing.JScrollPane JScrollPane1;
    private javax.swing.JLabel Minute;
    private javax.swing.JButton OKButton;
    // End of variables declaration//GEN-END:variables
}
